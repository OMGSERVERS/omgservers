name: integration

services:
  # frontend
  gateway:
    image: "omgservers/gateway:${OMGSERVERS_VERSION}"
    container_name: "gateway"
    ports:
      - "8080:8080"
      - "10000:10000"
    networks:
      - omgservers
    command: "-c /etc/envoy/integration.yaml"
  ctl:
    image: "omgservers/ctl:${OMGSERVERS_VERSION}"
    container_name: "ctl"
    restart: unless-stopped
    environment:
      - DELAY=16
      - SERVICE_URL=http://gateway:8080
      - ADMIN_USER_ID=223221505901723648
      - ADMIN_PASSWORD=admin
      - SUPPORT_USER_ID=231928170708729857
      - SUPPORT_PASSWORD=support
      - BACKGROUND=true
    networks:
      - omgservers
  # backend
  docker:
    image: "omgservers/docker:${OMGSERVERS_VERSION}"
    container_name: "docker"
    networks:
      - omgservers
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  registry:
    image: "omgservers/registry:${OMGSERVERS_VERSION}"
    container_name: "registry"
    environment:
      - OMGSERVERS_ENVIRONMENT=integration
      - OMGSERVERS_AUTH_URL=http://localhost:8080
      - OMGSERVERS_SERVICE_URL=http://gateway:8080
    volumes:
      - ./cert.pem:/root/certs/bundle/cert.pem
    ports:
      - "5000:5000"
    networks:
      - omgservers
  builder:
    image: "omgservers/builder:${OMGSERVERS_VERSION}"
    container_name: "builder"
    ports:
      - "7070:8080"
    networks:
      - omgservers
    environment:
      - JENKINS_URL=http://builder:8080
      - JENKINS_ADMIN_ID=builder
      - JENKINS_ADMIN_PASSWORD=builder
      - JENKINS_ADMIN_TOKEN=1167db115da39e5c7776c661e463fe7933
      - OMGSERVERS_BUILDER_USER_ID=builder
      - OMGSERVERS_BUILDER_USER_PASSWORD=builder
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_REGISTRY=localhost:5000
  # service1
  database1:
    image: "omgservers/database:${OMGSERVERS_VERSION}"
    container_name: "database1"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues1:
    image: "omgservers/queues:${OMGSERVERS_VERSION}"
    container_name: "queues1"
    environment:
      - ARTEMIS_USER=queues
      - ARTEMIS_PASSWORD=queues
    networks:
      - omgservers
  service1:
    image: "omgservers/service:${OMGSERVERS_VERSION}"
    container_name: "service1"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database1
      - queues1
    environment:
      - OMGSERVERS_OTEL_DISABLED=true
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${OMGSERVERS_APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${OMGSERVERS_ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${OMGSERVERS_TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DATABASE_URL=postgresql://database1:5432/root
      - OMGSERVERS_QUEUES_HOST=queues1
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://service1:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://service1:8080,http://service2:8080,http://service3:8080
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_0__DOCKER_DAEMON_URI=tcp://docker:2375
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_0__CPU_COUNT=800
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_0__MEMORY_SIZE=8192
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_0__MAX_CONTAINERS=16
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_1__DOCKER_DAEMON_URI=tcp://docker:2375
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_1__CPU_COUNT=800
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_1__MEMORY_SIZE=8192
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_1__MAX_CONTAINERS=16
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_2__DOCKER_DAEMON_URI=tcp://docker:2375
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_2__CPU_COUNT=800
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_2__MEMORY_SIZE=8192
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_DOCKER_HOSTS_2__MAX_CONTAINERS=16
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=0
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  # service2
  database2:
    image: "omgservers/database:${OMGSERVERS_VERSION}"
    container_name: "database2"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues2:
    image: "omgservers/queues:${OMGSERVERS_VERSION}"
    container_name: "queues2"
    environment:
      - ARTEMIS_USER=queues
      - ARTEMIS_PASSWORD=queues
    networks:
      - omgservers
  service2:
    image: "omgservers/service:${OMGSERVERS_VERSION}"
    container_name: "service2"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database2
      - queues2
    environment:
      - OMGSERVERS_OTEL_DISABLED=true
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${OMGSERVERS_APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${OMGSERVERS_ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${OMGSERVERS_TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DATABASE_URL=postgresql://database2:5432/root
      - OMGSERVERS_QUEUES_HOST=queues2
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://service2:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://service1:8080,http://service2:8080,http://service3:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=1
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  # service3
  database3:
    image: "omgservers/database:${OMGSERVERS_VERSION}"
    container_name: "database3"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues3:
    image: "omgservers/queues:${OMGSERVERS_VERSION}"
    container_name: "queues3"
    environment:
      - ARTEMIS_USER=queues
      - ARTEMIS_PASSWORD=queues
    networks:
      - omgservers
  service3:
    image: "omgservers/service:${OMGSERVERS_VERSION}"
    container_name: "service3"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database3
      - queues3
    environment:
      - OMGSERVERS_OTEL_DISABLED=true
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${OMGSERVERS_APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${OMGSERVERS_ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${OMGSERVERS_TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DATABASE_URL=postgresql://database3:5432/root
      - OMGSERVERS_QUEUES_HOST=queues3
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://service3:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://service1:8080,http://service2:8080,http://service3:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=2
      - OMGSERVERS_BUILDER_URI=http://builder:8080
networks:
  omgservers:
    name: omgservers
