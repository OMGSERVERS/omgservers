local runtime_messages = require("server.runtime_messages.runtime_messages")
local game_messages = require("common.game_messages.game_messages")
local omgserver = require("omgservers.omgserver")

local function runtime_initialized(self, version_config)
	self.version_config = version_config
end

local function add_match_client(self, client_id, profile)
	-- Makes client to use websockets
	omgserver.service_commands:upgrade_connection(client_id)

	print("[SERVER_HANDLER] Client was added, client_id=" .. client_id)
end

local function delete_client(self, client_id)
	print("[SERVER_HANDLER] Client was deleted, client_id=" .. client_id)
end

local function request_spawn(self, client_id)
end

local function move_player(self, client_id, x, y)
end

function on_message(self, message_id, message, sender)
	if message_id == hash(runtime_messages.constants.RUNTIME_INITIALIZED) then
		local version_config = message.version_config
		runtime_initialized(self, version_config)
		
	elseif message_id == hash(runtime_messages.constants.COMMAND_RECEIVED) then
		local command_qualifier = message.command_qualifier
		local command_body = message.command_body
		if command_qualifier == omgserver.constants.ADD_MATCH_CLIENT_SERVICE_COMMAND_QUALIFIER then
			local client_id = command_body.client_id
			local profile = command_body.profile
			add_match_client(self, client_id, profile)
			
		elseif command_qualifier == omgserver.constants.DELETE_CLIENT_SERVICE_COMMAND_QUALIFIER then
			local client_id = command_body.client_id
			delete_client(self, client_id)
		end
		
	elseif message_id == hash(runtime_messages.constants.MESSAGE_RECEIVED) then
		local client_id = message.client_id
		local game_message = message.message
		local message_qualifier = game_messages.qualifier

		if message_qualifier == game_messages.constants.REQUEST_SPAWN then
			request_spawn(self, client_id)

		elseif message_qualifier == game_messages.constants.MOVE_PLAYER then
			local x = game_message.x
			local y = game_message.y
			move_player(self, client_id, x, y)
		end
	end
end