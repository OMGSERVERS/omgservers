local match_log = require("game.match_log.match_log")

local MAX_LOGS_COUNT = 8
local SCROLL_DOWN_DELAY = 8

local function get_log_node(self, index)
	return gui.get_node("match_log_" .. index .. "_text")
end

local function set_log_node(self, index, text)
	local log_node = get_log_node(self, index)
	gui.set_enabled(log_node, true)
	gui.set_text(log_node, text)
	print(socket.gettime() .. " [MATCH_LOG] Set log node, index=" .. index .. ", text=" .. text)
end

local function disable_log(self, index)
	local log_node = get_log_node(self, index)
	gui.set_enabled(log_node, false)
	print(socket.gettime() .. " [MATCH_LOG] Disable log node, index=" .. index)
end

local function disable_all_logs(self)
	for index = 1, MAX_LOGS_COUNT do
		disable_log(self, index)
	end
end

local function scroll_down(self)
	print(socket.gettime() .. " [MATCH_LOG] Scroll down")
	
	disable_log(self, 1)
	
	for index = 2, MAX_LOGS_COUNT do
		local this_node = get_log_node(self, index)
		if gui.is_enabled(this_node) then
			disable_log(self, index)
			
			local this_text = gui.get_text(this_node)
			set_log_node(self, index - 1, this_text)
		end
	end

	self.empty_log_index = math.max(1, self.empty_log_index - 1)
end

local function add_log(self, text)
	if self.empty_log_index > MAX_LOGS_COUNT then
		scroll_down(self)
	end
	
	set_log_node(self, self.empty_log_index, text)

	self.empty_log_index = self.empty_log_index + 1
	self.timer = 0
end

local function player_joined(self, nickname)
	print(socket.gettime() .. " [MATCH_LOG] Player joined, nickname=" .. nickname)
	add_log(self, "Player " .. nickname .. " joined")
end

local function player_spawned(self, nickname)
	print(socket.gettime() .. " [MATCH_LOG] Player spawned, nickname=" .. nickname)
	add_log(self, "Player " .. nickname .. " spawned")
end

local function player_leaved(self, nickname)
	print(socket.gettime() .. " [MATCH_LOG] Player leaved, nickname=" .. nickname)
	add_log(self, "Player " .. nickname .. " leaved")
end

local function player_killed(self, killed, killer)
	print(socket.gettime() .. " [MATCH_LOG] Player " .. killed .. " was killed by " .. killer)
	add_log(self, "Player " .. killer .. " killed " .. killed)
end

function init(self)
	print(socket.gettime() .. " [MATCH_LOG] Initialized")
	disable_all_logs(self)
	self.empty_log_index = 1
	self.timer = 0
end

function update(self, dt)
	self.timer = self.timer + dt
	if self.timer > SCROLL_DOWN_DELAY then
		scroll_down(self)
		self.timer = 0
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash(match_log.PLAYER_JOINED) then
		local nickname = message.nickname
		player_joined(self, nickname)

	elseif message_id == hash(match_log.PLAYER_SPAWNED) then
		local nickname = message.nickname
		player_spawned(self, nickname)
		
	elseif message_id == hash(match_log.PLAYER_LEAVED) then
		local nickname = message.nickname
		player_leaved(self, nickname)

	elseif message_id == hash(match_log.PLAYER_KILLED) then
		local killed = message.killed
		local killer = message.killer
		player_killed(self, killed, killer)
		
	end
end