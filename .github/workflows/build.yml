name: Build

on:
  push:
    tags:
      - "*"
    branches:
      - "*"
  workflow_dispatch:

jobs:
  maven-install:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=OMGSERVERS_omgservers
      - name: Upload artifact (omgserversctl-java-jar)
        uses: actions/upload-artifact@v4
        with:
          name: omgserversctl-java-jar
          path: omgservers-ctl/target/*-runner.jar
      - name: Upload artifact (openapi-yaml)
        uses: actions/upload-artifact@v4
        with:
          name: openapi-yaml
          path: omgservers-service/target/openapi/openapi.yaml
      - name: Upload artifact (localtesting-environment)
        uses: actions/upload-artifact@v4
        with:
          name: localtesting-environment
          path: |
            omgservers-testing/localtesting-environment/src/**
          include-hidden-files: true
      - name: Upload artifact (install-sh)
        uses: actions/upload-artifact@v4
        with:
          name: install-sh
          path: install.sh

  build-ctl:
    runs-on: "${{ matrix.runner }}"
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            arch: x86_64
            os: linux
            executable: "*-runner"
          - runner: windows-2025
            arch: x86_64
            os: windows
            executable: "*-runner.exe"
          - runner: macos-13
            arch: intel
            os: macos
            executable: "*-runner"
          - runner: macos-15
            arch: arm64
            os: macos
            executable: "*-runner"
    if: |
      startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: "graalvm-community"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Build Native Image
        run: ./mvnw clean install -DskipTests -Dnative -pl omgservers-ctl -am
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: omgserversctl-${{ matrix.arch }}-${{ matrix.os }}
          path: omgservers-ctl/target/${{ matrix.executable }}

  push-images:
    runs-on: ubuntu-24.04
    needs: maven-install
    if: |
      startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Push image for omgservers-service
        run: ./mvnw -B install -DskipTests -Dquarkus.container-image.push=true -pl omgservers-service -am
      - name: Push image for omgservers-connector
        run: ./mvnw -B install -DskipTests -Dquarkus.container-image.push=true -pl omgservers-connector -am
      - name: Push image for omgservers-dispatcher
        run: ./mvnw -B install -DskipTests -Dquarkus.container-image.push=true -pl omgservers-dispatcher -am

  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs:
      - maven-install
      - push-images
      - build-ctl
    if: |
      startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: omgserversctl-java-jar
          path: omgserversctl-java-jar
      - uses: actions/download-artifact@v4
        with:
          name: openapi-yaml
          path: openapi-yaml
      - uses: actions/download-artifact@v4
        with:
          name: localtesting-environment
          path: localtesting-environment
      - uses: actions/download-artifact@v4
        with:
          name: install-sh
          path: install-sh
      - uses: actions/download-artifact@v4
        with:
          name: omgserversctl-x86_64-linux
          path: omgserversctl-x86_64-linux
      - uses: actions/download-artifact@v4
        with:
          name: omgserversctl-x86_64-windows
          path: omgserversctl-x86_64-windows
      - uses: actions/download-artifact@v4
        with:
          name: omgserversctl-intel-macos
          path: omgserversctl-intel-macos
      - uses: actions/download-artifact@v4
        with:
          name: omgserversctl-arm64-macos
          path: omgserversctl-arm64-macos
      - name: Rename Artifacts
        run: |
          set -x
          mkdir artifacts
          mv omgserversctl-java-jar/*-runner.jar artifacts/omgserversctl.jar
          mv omgserversctl-x86_64-linux/*-runner omgserversctl-x86_64-linux/omgserversctl && zip artifacts/omgserversctl-x86_64-linux.zip omgserversctl-x86_64-linux/omgserversctl
          mv omgserversctl-x86_64-windows/*-runner.exe omgserversctl-x86_64-windows/omgserversctl.exe && zip artifacts/omgserversctl-x86_64-windows.zip omgserversctl-x86_64-windows/omgserversctl.exe
          mv omgserversctl-intel-macos/*-runner omgserversctl-intel-macos/omgserversctl && zip artifacts/omgserversctl-intel-macos.zip omgserversctl-intel-macos/omgserversctl
          mv omgserversctl-arm64-macos/*-runner omgserversctl-arm64-macos/omgserversctl && zip artifacts/omgserversctl-arm64-macos.zip omgserversctl-arm64-macos/omgserversctl
          zip -r artifacts/localtesting-environment.zip localtesting-environment
          mv install-sh/install.sh artifacts/install.sh
          mv openapi-yaml/openapi.yaml artifacts/openapi.yaml
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: artifacts/*
          preserve_order: true
          draft: true
