version: '3.8'
services:
  egw:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "egw"
    restart: always
    ports:
      - "${GW_NETWORK}:10000-10004:10000-10004"
    networks:
      - frontend
    volumes:
      - ./egw.yaml:/etc/envoy/envoy.yaml
  igw:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "igw"
    restart: always
    networks:
      - workers
      - backend
    volumes:
      - ./igw.yaml:/etc/envoy/envoy.yaml
  docker:
    image: "alpine/socat"
    container_name: "docker"
    restart: always
    networks:
      - backend
    command: "tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  svc:
    image: "crionuke/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "svc"
    restart: always
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - mq
    environment:
      - OMGSERVERS_ROOT_LOG_LEVEL=INFO
      - OMGSERVERS_APP_LOG_LEVEL=INFO
      - OMGSERVERS_TRAFFIC_LOG_LEVEL=INFO
      - OMGSERVERS_ACCESS_LOG_ENABLED=false
      - OMGSERVERS_DATASOURCE_URL=postgresql://db:5432/omgservers
      - OMGSERVERS_DATASOURCE_USERNAME=${DB_USERNAME}
      - OMGSERVERS_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - OMGSERVERS_AMQP_HOST=mq
      - OMGSERVERS_AMQP_PORT=5672
      - OMGSERVERS_AMQP_USERNAME=${MQ_USERNAME}
      - OMGSERVERS_AMQP_PASSWORD=${MQ_PASSWORD}
      - OMGSERVERS_DATACENTER_ID=${SVC_DATACENTER_ID}
      - OMGSERVERS_NODE_ID=${SVC_NODE_ID}
      - OMGSERVERS_EXTERNAL_URI=${SVC_EXTERNAL_URI}
      - OMGSERVERS_INTERNAL_URI=${SVC_INTERNAL_URI}
      - OMGSERVERS_SERVICE_USERNAME=${SVC_SERVICE_USERNAME}
      - OMGSERVERS_SERVICE_PASSWORD=${SVC_SERVICE_PASSWORD}
      - OMGSERVERS_ADMIN_USERNAME=${SVC_ADMIN_USERNAME}
      - OMGSERVERS_ADMIN_PASSWORD_HASH=${SVC_ADMIN_PASSWORD_HASH}
      - OMGSERVERS_ADDRESSES=${SVC_ADDRESSES}
      - OMGSERVERS_SHARD_COUNT=128
      - OMGSERVERS_BOOTSTRAP_SERVICE=${SVC_BOOTSTRAP_SERVICE}
      - OMGSERVERS_TOKEN_LIFETIME=3600
      - OMGSERVERS_WORKER_NETWORK=workers
      - OMGSERVERS_DOCKER_HOST=tcp://docker:2375
  db:
    image: "postgres:15.1"
    container_name: "db"
    restart: always
    networks:
      - backend
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=omgservers
    volumes:
      - db:/var/lib/postgresql/data
  mq:
    image: "apache/activemq-artemis:latest-alpine"
    container_name: "mq"
    restart: always
    networks:
      - backend
    environment:
      - ARTEMIS_USER=${MQ_USERNAME}
      - ARTEMIS_PASSWORD=${MQ_PASSWORD}
    volumes:
      - mq:/var/lib/artemis-instance
networks:
  frontend:
    name: frontend
  backend:
    name: backend
  workers:
    name: workers
volumes:
  db:
    name: db
    driver: local
  mq:
    name: mq
    driver: local