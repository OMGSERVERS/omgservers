##
## QUARKUS
##
# Server
quarkus.application.name=${OMGSERVERS_APPLICATION_NAME:service}
quarkus.vertx.caching=false
quarkus.vertx.warning-exception-time=5s
%dev.quarkus.otel.sdk.disabled=true
%test.quarkus.otel.sdk.disabled=true
%prod.quarkus.otel.sdk.disabled=${OMGSERVERS_OTEL_DISABLED:true}
quarkus.otel.exporter.otlp.endpoint=${OMGSERVERS_OTEL_ENDPOINT:http://localhost:4317}
quarkus.management.enabled=true
%dev.quarkus.http.port=8081
%test.quarkus.http.port=8081
%prod.quarkus.http.port=8080
quarkus.http.limits.max-form-attribute-size=1M
%dev.quarkus.management.port=9091
%test.quarkus.management.port=9091
%prod.quarkus.management.port=9000
quarkus.websockets-next.server.auto-ping-interval=16
quarkus.websockets-next.client.auto-ping-interval=8
quarkus.banner.path=banner.txt
# Scheduler
quarkus.scheduler.enabled=true
quarkus.scheduler.start-mode=forced
quarkus.scheduler.tracing.enabled=true
# Docker
quarkus.container-image.group=omgservers
quarkus.container-image.name=service
quarkus.container-image.build=true
quarkus.docker.build-args."OMGSERVERS_VERSION"=${quarkus.application.version}
# Logging
%dev.quarkus.http.access-log.enabled=false
%test.quarkus.http.access-log.enabled=false
%prod.quarkus.http.access-log.enabled=${OMGSERVERS_ACCESS_LOG_ENABLED:false}
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=256
quarkus.log.level=${OMGSERVERS_ROOT_LOG_LEVEL:INFO}
%dev.quarkus.log.category."com.omgservers".level=INFO
%test.quarkus.log.category."com.omgservers".level=DEBUG
%prod.quarkus.log.category."com.omgservers".level=${OMGSERVERS_APP_LOG_LEVEL:INFO}
%prod.quarkus.log.category."com.omgservers".min-level=TRACE
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=INFO
%test.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=INFO
%prod.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=${OMGSERVERS_REST_CLIENT_LOG_LEVEL:INFO}
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE
quarkus.log.console.enable=${OMGSERVERS_CONSOLE_LOG_ENABLED:true}
quarkus.log.console.format=%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} [%X{traceId}] [%X{slot}] [%X{subject}] (%t) %-5p [%C{1}:%L] %s%e%n
# OpenApi
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.servers=http://localhost:8080
quarkus.smallrye-openapi.store-schema-directory=target/openapi
mp.openapi.extensions.smallrye.info.title=OMGSERVERS
# Database
quarkus.datasource.devservices.reuse=false
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/omgservers
%dev.quarkus.datasource.reactive.url=postgresql://localhost:5432/omgservers
%dev.quarkus.datasource.username=omgservers
%dev.quarkus.datasource.password=omgservers
%prod.quarkus.datasource.jdbc.url=jdbc:${OMGSERVERS_DATABASE_URL}
%prod.quarkus.datasource.reactive.url=${OMGSERVERS_DATABASE_URL}
%prod.quarkus.datasource.username=${OMGSERVERS_DATABASE_USERNAME:omgservers}
%prod.quarkus.datasource.password=${OMGSERVERS_DATABASE_PASSWORD}
# Redis
%dev.quarkus.redis.hosts=redis://localhost:6379
%prod.quarkus.redis.hosts=${OMGSERVERS_CACHE_HOSTS}
# JWT
%dev.mp.jwt.verify.publickey.location=testKeys/public_key.pem
%test.mp.jwt.verify.publickey.location=testKeys/public_key.pem
%prod.mp.jwt.verify.publickey.location=${OMGSERVERS_PUBLIC_KEY_LOCATION:file:/jwt_issuer/public_key.pem}
%dev.smallrye.jwt.sign.key.location=testKeys/private_key.pem
%test.smallrye.jwt.sign.key.location=testKeys/private_key.pem
%prod.smallrye.jwt.sign.key.location=${OMGSERVERS_PRIVATE_KEY_LOCATION:file:/jwt_issuer/private_key.pem}
mp.jwt.verify.issuer=omgservers
mp.jwt.verify.audiences=omgservers
##
## OMGSERVERS
##
# User
omgservers.user.alias=${OMGSERVERS_USER_ALIAS:service}
%dev.omgservers.user.password=service
%test.omgservers.user.password=service
%prod.omgservers.user.password=${OMGSERVERS_USER_PASSWORD}
# Jwt
omgservers.jwt.issuer=${OMGSERVERS_JWT_ISSUER:omgservers}
%dev.omgservers.jwt.x5c=MIIFGDCCAwCgAwIBAgIUMFIuRDQIpaoal+4IpE4qLAaWCJAwDQYJKoZIhvcNAQELBQAwHDEaMBgGA1UEAwwRY2Eub21nc2VydmVycy5jb20wHhcNMjQwNzI2MjAyNzM2WhcNMjcwNzI2MjAyNzM2WjAVMRMwEQYDVQQDDApvbWdzZXJ2ZXJzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAsu6S++nQyen62g5+Q8bEr5ZYm/Cy2lgd8VqPoPrzQNrPBIPZPPEzMSlpFWF4CDbKHcsqpSvyYL/idzDYt/gbpI+CTK7uXNk9irgrnKII3K6fNTlfzj/10vWR1CIgpEW3uyHoQCsj1XQ7YTwIc9v+NzYe+F6tcHnUqFBiz/2g3eQvvMLwIJXbIVk2399bPgkR4X1KCBcTYosB9AG2IzopqyJKeueYbCIF9eMJEBgsRqYK0vWDahVMNC7U96ZgENVIf2VEEtTAYDDbr4o6Iw2B9vByoArgJsmegH4TptuW3RI8y0srsAWQOwZ9/doEPaXYHirs+UR9Qy6urg6ReLVr5FddfYBymIb4W3GtiVjKqtc+v5tXa89FjpG+osnYkRUT2EmLaQc0osnoCrrudiokwAOzN84QWB9RVp20nbfcPrr4ITUlMQFpRZadaPSpFd4iF3PeB21IpKqBiupaGHne0twNfjTiIobTB6oTM0LZqTpYHyl3HQ03mPM5jTcQqPAZgLqLga7feYjOz5GoBazeazzAN4OqSj5/o3ShIK0aN5YvL/7jDnqfnKCCXnuKjRblomzCt34kTeGbjqJ/NB9YvW03egPhPoUQ6BGi8FcmNbSo8f+j2f2lN9uK5z+OO6Ky0CtB+26z6DOhAk6zm0rkYji2/gfS5ftIY8zDIZ3XKJMCAwEAAaNZMFcwFQYDVR0RBA4wDIIKb21nc2VydmVyczAdBgNVHQ4EFgQUxAacQCyFYdsLI+6OW4E23BvT6hIwHwYDVR0jBBgwFoAUlm8JZMuyJ+wuvzE1yXsSbYxPDmQwDQYJKoZIhvcNAQELBQADggIBAJ0O/aTm8N6vaQoerUCtswv2uHObA4fy3rC/e/TEpbeA/utUnYX+uCmjqBjplIHPoB95njMJDbtCbkPv1Y1+vxvoVTn38Ty/S12PnoX2eow/PCQnscixzB9jwbw/fO/UzujFOfc0aKbTlbqQCYXZG466MpBS/Edh0FQtZXxYowKZ7uQg9o675vMXg8tMmODt0IxaUf33bvoN41G+n0/3078RLnLNAyvPoGMdW2FZscjn+3oIZEx78dB+Kmp9JTDcLmxoduJvxduytg7zgcR6pz06th3WYgpBla1Tmreqmz4m4/Gm9W05vl1bwiF/YfackbQ/1jOD9CoKkOMhF1A+q2Rg3ypEDGbjsQJJv6SDfbaIdPXZECl3VR1Pt6oQzskMuKj/1vtqNbRanJdznUq0dZ3KYkuCtRl292Da05SuTIDA36Vmum7WS0uoBcug9TGw3BYQcBdWw09IOkDPOILvFafpxfgnMYNnUOL19EaQDhi/dY4BWInlB27zSrCH5DqVvm+xs2GxIu+QNKjTdtDH+hpUJuY/tJSFs43uWHHnu4YzfslWoBbDt8pn/NILrU5JGuTkZ/RF5Ww8EZf/01DPO6SiZlwvmGYVST+PBpfunufCWheiRW76oJsarVi3BQijVqOTobpkvXqyjFKRoX1TNH2pYuTmg6IsGDdCFpDBmeag
%test.omgservers.jwt.x5c=MIIFGDCCAwCgAwIBAgIUMFIuRDQIpaoal+4IpE4qLAaWCJAwDQYJKoZIhvcNAQELBQAwHDEaMBgGA1UEAwwRY2Eub21nc2VydmVycy5jb20wHhcNMjQwNzI2MjAyNzM2WhcNMjcwNzI2MjAyNzM2WjAVMRMwEQYDVQQDDApvbWdzZXJ2ZXJzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAsu6S++nQyen62g5+Q8bEr5ZYm/Cy2lgd8VqPoPrzQNrPBIPZPPEzMSlpFWF4CDbKHcsqpSvyYL/idzDYt/gbpI+CTK7uXNk9irgrnKII3K6fNTlfzj/10vWR1CIgpEW3uyHoQCsj1XQ7YTwIc9v+NzYe+F6tcHnUqFBiz/2g3eQvvMLwIJXbIVk2399bPgkR4X1KCBcTYosB9AG2IzopqyJKeueYbCIF9eMJEBgsRqYK0vWDahVMNC7U96ZgENVIf2VEEtTAYDDbr4o6Iw2B9vByoArgJsmegH4TptuW3RI8y0srsAWQOwZ9/doEPaXYHirs+UR9Qy6urg6ReLVr5FddfYBymIb4W3GtiVjKqtc+v5tXa89FjpG+osnYkRUT2EmLaQc0osnoCrrudiokwAOzN84QWB9RVp20nbfcPrr4ITUlMQFpRZadaPSpFd4iF3PeB21IpKqBiupaGHne0twNfjTiIobTB6oTM0LZqTpYHyl3HQ03mPM5jTcQqPAZgLqLga7feYjOz5GoBazeazzAN4OqSj5/o3ShIK0aN5YvL/7jDnqfnKCCXnuKjRblomzCt34kTeGbjqJ/NB9YvW03egPhPoUQ6BGi8FcmNbSo8f+j2f2lN9uK5z+OO6Ky0CtB+26z6DOhAk6zm0rkYji2/gfS5ftIY8zDIZ3XKJMCAwEAAaNZMFcwFQYDVR0RBA4wDIIKb21nc2VydmVyczAdBgNVHQ4EFgQUxAacQCyFYdsLI+6OW4E23BvT6hIwHwYDVR0jBBgwFoAUlm8JZMuyJ+wuvzE1yXsSbYxPDmQwDQYJKoZIhvcNAQELBQADggIBAJ0O/aTm8N6vaQoerUCtswv2uHObA4fy3rC/e/TEpbeA/utUnYX+uCmjqBjplIHPoB95njMJDbtCbkPv1Y1+vxvoVTn38Ty/S12PnoX2eow/PCQnscixzB9jwbw/fO/UzujFOfc0aKbTlbqQCYXZG466MpBS/Edh0FQtZXxYowKZ7uQg9o675vMXg8tMmODt0IxaUf33bvoN41G+n0/3078RLnLNAyvPoGMdW2FZscjn+3oIZEx78dB+Kmp9JTDcLmxoduJvxduytg7zgcR6pz06th3WYgpBla1Tmreqmz4m4/Gm9W05vl1bwiF/YfackbQ/1jOD9CoKkOMhF1A+q2Rg3ypEDGbjsQJJv6SDfbaIdPXZECl3VR1Pt6oQzskMuKj/1vtqNbRanJdznUq0dZ3KYkuCtRl292Da05SuTIDA36Vmum7WS0uoBcug9TGw3BYQcBdWw09IOkDPOILvFafpxfgnMYNnUOL19EaQDhi/dY4BWInlB27zSrCH5DqVvm+xs2GxIu+QNKjTdtDH+hpUJuY/tJSFs43uWHHnu4YzfslWoBbDt8pn/NILrU5JGuTkZ/RF5Ww8EZf/01DPO6SiZlwvmGYVST+PBpfunufCWheiRW76oJsarVi3BQijVqOTobpkvXqyjFKRoX1TNH2pYuTmg6IsGDdCFpDBmeag
%prod.omgservers.jwt.x5c=${OMGSERVERS_JWT_X5C}
# Migration
omgservers.migration.enabled=${OMGSERVERS_MIGRATION_ENABLED:true}
omgservers.migration.concurrency=${OMGSERVERS_MIGRATION_CONCURRENCY:16}
# Index
omgservers.index.enabled=${OMGSERVERS_INDEX_ENABLED:true}
%dev.omgservers.index.shards[0]=http://localhost:8080
%test.omgservers.index.shards[0]=http://localhost:8081
%dev.omgservers.index.slots-count=1
%test.omgservers.index.slots-count=1
%prod.omgservers.index.slots-count=${OMGSERVERS_SLOTS_COUNT}
# Master
%dev.omgservers.master.uri=http://localhost:8080
%test.omgservers.master.uri=http://localhost:8081
%prod.omgservers.master.uri=${OMGSERVERS_MASTER_URI}
# Shard
%dev.omgservers.shard.id=0
%test.omgservers.shard.id=15
%prod.omgservers.shard.id=${OMGSERVERS_SHARD_ID}
%dev.omgservers.shard.uri=http://localhost:8080
%test.omgservers.shard.uri=http://localhost:8081
%prod.omgservers.shard.uri=${OMGSERVERS_SHARD_URI}
# Client
omgservers.client.inactive-interval=${OMGSERVERS_CLIENT_INACTIVE_INTERVAL:30}
%dev.omgservers.client.dispatcher-uri=ws://localhost:8082
%test.omgservers.client.dispatcher-uri=ws://localhost:8082
%prod.omgservers.client.dispatcher-uri=${OMGSERVERS_CLIENT_DISPATCHER_URI}
# Docker
omgservers.docker.tls-verify=${OMGSERVERS_DOCKER_TLS_VERIFY:false}
omgservers.docker.cert-path=${OMGSERVERS_DOCKER_CERT_PATH:/docker/certs}
# Runtimes
omgservers.runtime.inactive-interval=${OMGSERVERS_RUNTIME_INACTIVE_INTERVAL:10}
omgservers.runtime.min-lifetime=${OMGSERVERS_RUNTIME_MIN_LIFETIME:60}
%dev.omgservers.runtime.docker-network=host
%test.omgservers.runtime.docker-network=host
%prod.omgservers.runtime.docker-network=${OMGSERVERS_RUNTIME_DOCKER_NETWORK:omgservers}
%dev.omgservers.runtime.service-uri=http://host.docker.internal:8080
%test.omgservers.runtime.service-uri=http://host.docker.internal:8081
%prod.omgservers.runtime.service-uri=${OMGSERVERS_RUNTIME_SERVICE_URI}
%dev.omgservers.runtime.dispatcher-uri=ws://host.docker.internal:8082
%test.omgservers.runtime.dispatcher-uri=ws://host.docker.internal:8082
%prod.omgservers.runtime.dispatcher-uri=${OMGSERVERS_RUNTIME_DISPATCHER_URI}
omgservers.runtime.default-cpu-limit=${OMGSERVERS_RUNTIME_DEFAULT_CPU_LIMIT:100}
omgservers.runtime.default-memory-limit=${OMGSERVERS_RUNTIME_DEFAULT_MEMORY_LIMIT:512}
# Registry
%dev.omgservers.registry.uri=http://localhost:5000
%test.omgservers.registry.uri=http://localhost:5000
%prod.omgservers.registry.uri=${OMGSERVERS_REGISTRY_URI}
# Jobs
%dev.omgservers.jobs.event-handler.enabled=true
%test.omgservers.jobs.event-handler.enabled=false
%prod.omgservers.jobs.event-handler.enabled=${OMGSERVERS_EVENT_HANDLER_ENABLED:true}
%dev.omgservers.jobs.scheduler.enabled=true
%test.omgservers.jobs.scheduler.enabled=false
%prod.omgservers.jobs.scheduler.enabled=${OMGSERVERS_SCHEDULER_ENABLED:true}
%dev.omgservers.jobs.bootstrap.enabled=true
%test.omgservers.jobs.bootstrap.enabled=false
%prod.omgservers.jobs.bootstrap.enabled=${OMGSERVERS_BOOTSTRAP_ENABLED:true}
# Bootstrap
omgservers.bootstrap.admin-user.alias=${OMGSERVERS_ADMIN_USER_ALIAS:admin}
%dev.omgservers.bootstrap.admin-user.password=admin
%test.omgservers.bootstrap.admin-user.password=admin
omgservers.bootstrap.admin-user.password=${OMGSERVERS_ADMIN_USER_PASSWORD}
omgservers.bootstrap.support-user.alias=${OMGSERVERS_SUPPORT_USER_ALIAS:support}
%dev.omgservers.bootstrap.support-user.password=support
%test.omgservers.bootstrap.support-user.password=support
omgservers.bootstrap.support-user.password=${OMGSERVERS_SUPPORT_USER_PASSWORD}
omgservers.bootstrap.service-user.alias=${OMGSERVERS_SERVICE_USER_ALIAS:service}
%dev.omgservers.bootstrap.service-user.password=service
%test.omgservers.bootstrap.service-user.password=service
omgservers.bootstrap.service-user.password=${OMGSERVERS_SERVICE_USER_PASSWORD}
%dev.omgservers.bootstrap.default-pool.servers[0].server-uri=http://localhost
%test.omgservers.bootstrap.default-pool.servers[0].server-uri=http://localhost
%dev.omgservers.bootstrap.default-pool.servers[0].docker-daemon-uri=tcp://localhost:2375
%test.omgservers.bootstrap.default-pool.servers[0].docker-daemon-uri=unix:///var/run/docker.sock
%dev.omgservers.bootstrap.default-pool.servers[0].cpu-count=800
%test.omgservers.bootstrap.default-pool.servers[0].cpu-count=800
%dev.omgservers.bootstrap.default-pool.servers[0].memory-size=8192
%test.omgservers.bootstrap.default-pool.servers[0].memory-size=8192
%dev.omgservers.bootstrap.default-pool.servers[0].max-containers=16
%test.omgservers.bootstrap.default-pool.servers[0].max-containers=16
