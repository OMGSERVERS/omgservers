quarkus.vertx.caching=false
quarkus.vertx.warning-exception-time=5s
quarkus.otel.sdk.disabled=true
quarkus.management.enabled=true
%dev.quarkus.http.port=8080
%dev.quarkus.management.port=8000
# Scheduler
quarkus.scheduler.enabled=true
quarkus.scheduler.start-mode=forced
quarkus.scheduler.tracing.enabled=true
# Docker
quarkus.container-image.group=omgservers
quarkus.container-image.name=omgservers-service
quarkus.container-image.build=true
# Logging
quarkus.http.access-log.enabled=${OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED:false}
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=256
quarkus.log.level=${OMGSERVERS_LOGGING_ROOT_LOGS_LEVEL:INFO}
%dev.quarkus.log.category."com.omgservers".level=DEBUG
%test.quarkus.log.category."com.omgservers".level=DEBUG
%prod.quarkus.log.category."com.omgservers".level=${OMGSERVERS_LOGGING_APP_LOGS_LEVEL:INFO}
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=${OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL:INFO}
quarkus.log.console.enable=${OMGSERVERS_LOGGING_CONSOLE_LOGS_ENABLED:true}
quarkus.log.console.format=%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} [%X{traceId}:%X{spanId}] (%t) %-5p [%c{2.}.%M:%L] %s%e%n
%dev.quarkus.log.file.enable=false
%test.quarkus.log.file.enable=false
%prod.quarkus.log.file.enable=true
quarkus.log.file.path=/var/log/omgservers/omgservers.log
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd
quarkus.log.file.rotation.max-backup-index=14
quarkus.log.file.rotation.max-file-size=1G
quarkus.log.file.format=%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} [%X{traceId}] (%t) %-5p [%c{2.}.%M:%L] %s%e%n
# OpenApi
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.servers=http://localhost:8080
quarkus.smallrye-openapi.store-schema-directory=target/openapi
mp.openapi.extensions.smallrye.info.title=OMGSERVERS
# DB
quarkus.datasource.devservices.reuse=false
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/root
%dev.quarkus.datasource.reactive.url=postgresql://localhost:5432/root
%dev.quarkus.datasource.username=root
%dev.quarkus.datasource.password=root
%prod.quarkus.datasource.jdbc.url=jdbc:${OMGSERVERS_DB_URL}
%prod.quarkus.datasource.reactive.url=${OMGSERVERS_DB_URL}
%prod.quarkus.datasource.username=${OMGSERVERS_DB_USERNAME:root}
%prod.quarkus.datasource.password=${OMGSERVERS_DB_PASSWORD:root}
# MQ
%dev.amqp-host=localhost
%dev.amqp-port=5672
%dev.amqp-username=admin
%dev.amqp-password=admin
%prod.amqp-host=${OMGSERVERS_MQ_HOST}
%prod.amqp-port=${OMGSERVERS_MQ_PORT:5672}
%prod.amqp-username=${OMGSERVERS_MQ_USERNAME:admin}
%prod.amqp-password=${OMGSERVERS_MQ_PASSWORD:admin}
# Messaging
mp.messaging.incoming.incoming-events.connector=smallrye-amqp
mp.messaging.incoming.incoming-events.address=${OMGSERVERS_MQ_SERVICE_QUEUE:ServiceEvents}
mp.messaging.outgoing.outgoing-events.connector=smallrye-amqp
mp.messaging.outgoing.outgoing-events.address=${OMGSERVERS_MQ_SERVICE_QUEUE:ServiceEvents}
mp.messaging.outgoing.outgoing-events.durable=true
mp.messaging.outgoing.forwarded-events.connector=smallrye-amqp
mp.messaging.outgoing.forwarded-events.address=${OMGSERVERS_MQ_FORWARDING_QUEUE:ForwardedEvents}
mp.messaging.outgoing.forwarded-events.durable=true
# JWT
mp.jwt.verify.publickey.location=${OMGSERVERS_JWT_PUBLIC_KEY:testKeys/publicKey.pem}
smallrye.jwt.sign.key.location=${OMGSERVERS_JWT_PRIVATE_KEY:testKeys/privateKey.pem}
mp.jwt.verify.issuer=${OMGSERVERS_JWT_ISSUER:https://omgservers.com}
# Generator
omgservers.generator.datacenter-id=${OMGSERVERS_GENERATOR_DATACENTER_ID:0}
omgservers.generator.instance-id=${OMGSERVERS_GENERATOR_INSTANCE_ID:0}
# Index
omgservers.index.name=${OMGSERVERS_INDEX_NAME:main}
omgservers.index.shard-count=${OMGSERVERS_INDEX_SHARD_COUNT:1}
%dev.omgservers.index.server-uri=http://localhost:8080
%test.omgservers.index.server-uri=http://localhost:8081
%prod.omgservers.index.server-uri=${OMGSERVERS_INDEX_SERVER_URI}
# Migration
omgservers.migration.enabled=${OMGSERVERS_MIGRATION_ENABLED:true}
omgservers.migration.concurrency=${OMGSERVERS_MIGRATION_CONCURRENCY:16}
# Bootstrap
omgservers.bootstrap.root-id=${OMGSERVERS_BOOTSTRAP_ROOT_ID:180909566647599104}
%dev.omgservers.bootstrap.index.enabled=true
%test.omgservers.bootstrap.index.enabled=true
%prod.omgservers.bootstrap.index.enabled=${OMGSERVERS_BOOTSTRAP_INDEX_ENABLED:false}
%dev.omgservers.bootstrap.index.servers=http://localhost:8080
%test.omgservers.bootstrap.index.servers=http://localhost:8081
%prod.omgservers.bootstrap.index.servers=${OMGSERVERS_BOOTSTRAP_INDEX_SERVERS:http://localhost:8080}
%dev.omgservers.bootstrap.local-host.enabled=true
%test.omgservers.bootstrap.local-host.enabled=true
%prod.omgservers.bootstrap.local-host.enabled=${OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED:false}
%dev.omgservers.bootstrap.local-host.uri=tcp://localhost:2375
%test.omgservers.bootstrap.local-host.uri=unix:///var/run/docker.sock
%prod.omgservers.bootstrap.local-host.uri=${OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI:tcp://docker:2375}
omgservers.bootstrap.local-host.cpu-count=${OMGSERVERS_BOOTSTRAP_LOCAL_HOST_CPU_COUNT:4000}
omgservers.bootstrap.local-host.memory-size=${OMGSERVERS_BOOTSTRAP_LOCAL_HOST_MEMORY_SIZE:8192}
omgservers.bootstrap.local-host.max-containers=${OMGSERVERS_BOOTSTRAP_LOCAL_HOST_MAX_CONTAINERS:16}
# Relay job
%dev.omgservers.relay-job.enabled=true
%test.omgservers.relay-job.enabled=false
%prod.omgservers.relay-job.enabled=${OMGSERVERS_RELAY_JOB_ENABLED:true}
# Clients
omgservers.clients.token-lifetime=${OMGSERVERS_CLIENTS_TOKEN_LIFETIME:3600}
omgservers.clients.inactive-interval=${OMGSERVERS_CLIENTS_INACTIVE_INTERVAL:30}
# Docker
omgservers.docker.tls-verify=${OMGSERVERS_DOCKER_TLS_VERIFY:false}
omgservers.docker.cert-path=${OMGSERVERS_DOCKER_CERT_PATH:~/.docker/certs}
# Workers
omgservers.workers.inactive-interval=${OMGSERVERS_WORKERS_INACTIVE_INTERVAL:30}
omgservers.workers.docker-image=${OMGSERVERS_WORKERS_DOCKER_IMAGE:omgservers/omgservers-worker:1.0.0-SNAPSHOT}
%dev.omgservers.workers.docker-network=host
%test.omgservers.workers.docker-network=host
%prod.omgservers.workers.docker-network=${OMGSERVERS_WORKERS_DOCKER_NETWORK:omgservers}
%dev.omgservers.workers.service-uri=http://host.docker.internal:8080
%test.omgservers.workers.service-uri=http://host.docker.internal:8081
%prod.omgservers.workers.service-uri=${OMGSERVERS_WORKERS_SERVICE_URI}
# Builder
%dev.omgservers.builder.uri=http://localhost:7070
%test.omgservers.builder.uri=http://localhost:7070
%prod.omgservers.builder.uri=${OMGSERVERS_BUILDER_URI:http://builder:7070}
%dev.omgservers.builder.user-id=admin
%test.omgservers.builder.user-id=admin
%prod.omgservers.builder.user-id=${OMGSERVERS_BUILDER_USER_ID:admin}
%dev.omgservers.builder.user-token=1167db115da39e5c7776c661e463fe7933
%test.omgservers.builder.user-token=1167db115da39e5c7776c661e463fe7933
%prod.omgservers.builder.user-token=${OMGSERVERS_BUILDER_USER_TOKEN:1167db115da39e5c7776c661e463fe7933}