version: "3.8"
services:
  # routing
  entrypoint:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "entrypoint"
    ports:
      - "8080:8080"
    networks:
      - omgservers
    volumes:
      - ./config/entrypoint.yaml:/etc/envoy/envoy.yaml
  gateway1:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "gateway1"
    networks:
      - omgservers
    volumes:
      - ./config/gateway1.yaml:/etc/envoy/envoy.yaml
  gateway2:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "gateway2"
    networks:
      - omgservers
    volumes:
      - ./config/gateway2.yaml:/etc/envoy/envoy.yaml
  gateway3:
    image: "envoyproxy/envoy:v1.28-latest"
    container_name: "gateway3"
    networks:
      - omgservers
    volumes:
      - ./config/gateway3.yaml:/etc/envoy/envoy.yaml
  # backend
  docker:
    image: "alpine/socat"
    container_name: "docker"
    networks:
      - omgservers
    command: "tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  registry:
    image: "registry:2.8.3"
    container_name: "registry"
    ports:
      - "5050:5000"
    networks:
      - omgservers
  builder:
    image: "omgservers/omgservers-builder:1.0.0-SNAPSHOT"
    container_name: "builder"
    ports:
      - "7070:8080"
    networks:
      - omgservers
    environment:
      - JENKINS_URL=http://builder:8080
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=admin
      - JENKINS_ADMIN_TOKEN=1167db115da39e5c7776c661e463fe7933
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_REGISTRY=localhost:5050
  # service1
  database1:
    image: "postgres:16"
    container_name: "database1"
    command: postgres -c shared_preload_libraries=pg_stat_statements
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues1:
    image: "apache/activemq-artemis:2.33.0-alpine"
    container_name: "queues1"
    environment:
      - ARTEMIS_USER=admin
      - ARTEMIS_PASSWORD=admin
    volumes:
      - ./config/broker.xml:/var/lib/artemis-instance/etc-override/broker.xml
    networks:
      - omgservers
  service1a:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service1a"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database1
      - queues1
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database1:5432/root
      - OMGSERVERS_MQ_HOST=queues1
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway1:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://gateway1:8080,http://gateway2:8080,http://gateway3:8080
      - OMGSERVERS_BOOTSTRAP_ADMIN_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_ROOT_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway1:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=0
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  service1b:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service1b"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database1
      - queues1
      - service1a
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database1:5432/root
      - OMGSERVERS_MQ_HOST=queues1
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway1:8080
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI=tcp://docker:2375
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway1:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=1
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  # service2
  database2:
    image: "postgres:16"
    container_name: "database2"
    command: postgres -c shared_preload_libraries=pg_stat_statements
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues2:
    image: "apache/activemq-artemis:2.33.0-alpine"
    container_name: "queues2"
    environment:
      - ARTEMIS_USER=admin
      - ARTEMIS_PASSWORD=admin
    volumes:
      - ./config/broker.xml:/var/lib/artemis-instance/etc-override/broker.xml
    networks:
      - omgservers
  service2a:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service2a"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database2
      - queues2
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database2:5432/root
      - OMGSERVERS_MQ_HOST=queues2
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway2:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://gateway1:8080,http://gateway2:8080,http://gateway3:8080
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI=tcp://docker:2375
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway2:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=2
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  service2b:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service2b"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database2
      - queues2
      - service2a
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database2:5432/root
      - OMGSERVERS_MQ_HOST=queues2
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway2:8080
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI=tcp://docker:2375
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway2:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=3
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  # service3
  database3:
    image: "postgres:16"
    container_name: "database3"
    command: postgres -c shared_preload_libraries=pg_stat_statements
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    networks:
      - omgservers
  queues3:
    image: "apache/activemq-artemis:2.33.0-alpine"
    container_name: "queues3"
    environment:
      - ARTEMIS_USER=admin
      - ARTEMIS_PASSWORD=admin
    volumes:
      - ./config/broker.xml:/var/lib/artemis-instance/etc-override/broker.xml
    networks:
      - omgservers
  service3a:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service3a"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database3
      - queues3
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database3:5432/root
      - OMGSERVERS_MQ_HOST=queues3
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway3:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://gateway1:8080,http://gateway2:8080,http://gateway3:8080
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI=tcp://docker:2375
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway3:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=4
      - OMGSERVERS_BUILDER_URI=http://builder:8080
  service3b:
    image: "omgservers/omgservers-service:1.0.0-SNAPSHOT"
    container_name: "service3b"
    restart: unless-stopped
    networks:
      - omgservers
    depends_on:
      - database3
      - queues3
      - service3a
    tmpfs:
      - /var/log/omgservers
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${APP_LOGS_LEVEL}
      - OMGSERVERS_LOGGING_ACCESS_LOGS_ENABLED=${ACCESS_LOGS_ENABLED}
      - OMGSERVERS_LOGGING_TRAFFIC_LOGS_LEVEL=${TRAFFIC_LOGS_LEVEL}
      - OMGSERVERS_DB_URL=postgresql://database3:5432/root
      - OMGSERVERS_MQ_HOST=queues3
      - OMGSERVERS_INDEX_SHARD_COUNT=3
      - OMGSERVERS_INDEX_SERVER_URI=http://gateway3:8080
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_LOCAL_HOST_URI=tcp://docker:2375
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway3:8080
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=5
      - OMGSERVERS_BUILDER_URI=http://builder:8080
networks:
  omgservers:
    name: omgservers
