version: "3.8"
services:
  # frontend
  gateway:
    image: "omgservers/gateway:${OMGSERVERS_VERSION}"
    container_name: "gateway"
    restart: unless-stopped
    volumes:
      - ./gateway/server.pem:/certificate/server.pem:ro
      - ./gateway/privateKey.pem:/certificate/privateKey.pem:ro
    ports:
      - "${GATEWAY_PORT}:8443"
      - "127.0.0.1:10000-10003:10000-10003"
    networks:
      service:
        ipv4_address: 172.1.0.2
      workers:
        ipv4_address: 172.2.0.2
    command: "-c /etc/envoy/standalone.yaml"
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  # backend
  docker:
    image: "omgservers/docker:${OMGSERVERS_VERSION}"
    container_name: "docker"
    restart: unless-stopped
    networks:
      service:
        ipv4_address: 172.1.0.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  registry:
    image: "omgservers/registry:${OMGSERVERS_VERSION}"
    container_name: "registry"
    restart: unless-stopped
    ports:
      - "127.0.0.1:5000:5000"
    networks:
      service:
        ipv4_address: 172.1.0.4
    volumes:
      - registry:/var/lib/registry
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  builder:
    image: "omgservers/builder:${OMGSERVERS_VERSION}"
    container_name: "builder"
    restart: unless-stopped
    ports:
      - "127.0.0.1:7070:8080"
    networks:
      service:
        ipv4_address: 172.1.0.5
    environment:
      - JENKINS_URL=http://builder:7070
      - JENKINS_ADMIN_ID=builder
      - JENKINS_ADMIN_PASSWORD=${BUILDER_PASSWORD}
      - JENKINS_ADMIN_TOKEN=${BUILDER_TOKEN}
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_REGISTRY=127.0.0.1:5000
    volumes:
      - builder:/var/jenkins_home
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  # service
  database:
    image: "omgservers/database:${OMGSERVERS_VERSION}"
    container_name: "database"
    restart: unless-stopped
    shm_size: 128m
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=root
    networks:
      service:
        ipv4_address: 172.1.0.6
    volumes:
      - database:/var/lib/postgresql
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  queues:
    image: "omgservers/queues:${OMGSERVERS_VERSION}"
    container_name: "queues"
    restart: unless-stopped
    environment:
      - ARTEMIS_USER=queues
      - ARTEMIS_PASSWORD=${QUEUES_PASSWORD}
    ports:
      - "8161:8161"
    volumes:
      - queues:/var/lib/artemis-instance
    networks:
      service:
        ipv4_address: 172.1.0.7
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  service:
    image: "omgservers/service:${OMGSERVERS_VERSION}"
    container_name: "service"
    restart: unless-stopped
    networks:
      service:
        ipv4_address: 172.1.0.8
    depends_on:
      - database
      - queues
    volumes:
      - ./jwtkeys/privateKey.pem:/jwtkeys/privateKey.pem:ro
      - ./jwtkeys/publicKey.pem:/jwtkeys/publicKey.pem:ro
    environment:
      - OMGSERVERS_LOGGING_APP_LOGS_LEVEL=${OMGSERVERS_LOGGING_LEVEL}
      - OMGSERVERS_DATABASE_URL=postgresql://database:5432/root
      - OMGSERVERS_DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - OMGSERVERS_QUEUES_HOST=queues
      - OMGSERVERS_QUEUES_PASSWORD=${QUEUES_PASSWORD}
      - OMGSERVERS_INDEX_SHARD_COUNT=${OMGSERVERS_SHARDS}
      - OMGSERVERS_INDEX_SERVER_URI=http://service:8080
      - OMGSERVERS_BOOTSTRAP_INDEX_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_INDEX_SERVERS=http://service:8080
      - OMGSERVERS_BOOTSTRAP_ROOT_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_ADMIN_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OMGSERVERS_BOOTSTRAP_SUPPORT_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_SUPPORT_PASSWORD=${SUPPORT_PASSWORD}
      - OMGSERVERS_BOOTSTRAP_DEFAULT_POOL_ENABLED=true
      - OMGSERVERS_BOOTSTRAP_DOCKER_HOST_ENABLED=true
      - OMGSERVERS_WORKERS_SERVICE_URI=http://gateway:10003
      - OMGSERVERS_WORKERS_DOCKER_NETWORK=workers
      - OMGSERVERS_GENERATOR_DATACENTER_ID=0
      - OMGSERVERS_GENERATOR_INSTANCE_ID=0
      - OMGSERVERS_BUILDER_URI=http://builder:8080
      - OMGSERVERS_BUILDER_USER_ID=builder
      - OMGSERVERS_BUILDER_USER_TOKEN=${BUILDER_TOKEN}
      - OMGSERVERS_JWT_PUBLIC_KEY=/jwtkeys/publicKey.pem
      - OMGSERVERS_JWT_PRIVATE_KEY=/jwtkeys/privateKey.pem
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "8"
  ctl:
    image: "omgservers/ctl:${OMGSERVERS_VERSION}"
    container_name: "ctl"
    restart: unless-stopped
    depends_on:
      - gateway
    environment:
      - DELAY=16
      - EXTERNAL_URL=http://service:8080
      - INTERNAL_URL=http://service:8080
      - ADMIN_USER_ID=223221505901723648
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - SUPPORT_USER_ID=231928170708729857
      - SUPPORT_PASSWORD=${SUPPORT_PASSWORD}
      - BACKGROUND=true
    networks:
      service:
        ipv4_address: 172.1.0.9
volumes:
  builder:
    name: builder
    driver: local
  registry:
    name: registry
    driver: local
  database:
    name: database
    driver: local
  queues:
    name: queues
    driver: local
networks:
  service:
    name: service
    ipam:
      config:
        - subnet: 172.1.0.0/16
          gateway: 172.1.0.1
  workers:
    name: workers
    internal: true
    ipam:
      config:
        - subnet: 172.2.0.0/16
          gateway: 172.2.0.1
